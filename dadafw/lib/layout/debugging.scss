// Dada Web Framework <https://github.com/msikma/dadafw>
// Copyright (C) 2013-2015, Michiel Sikma <michiel@sikma.org> and contributors
// MIT licensed

/**
 * Grid System / Layout Debugging
 *
 * A special display class used for debugging grid layouts by making the edges
 * and gutters visible.
 */

// Grid Debugging
// ---------------------------------------------------------------------
// This is a grid display class for debugging and documentation purposes.
// It's a bit tedious and requires some trickery because a background
// will show up in the gutter as well. So we need to use box-shadows
// to make the gutter visible. We use the same method to display the edges.
// This is only for debugging purposes.

@mixin grid-debug()
{
  .grid-debug {
    .row {
      background: rgba($grid-debug-color, 0.20);

      .col {
        background: rgba($grid-debug-color, 0.20);
        text-align: center;
        padding-top: $p-base-margin-top;
        padding-bottom: $p-base-margin-bottom;
      }
    }
  }
}

// Adds grid debugging for mobile only.
@mixin grid-debug-mobile($viewport-max-width)
{
  @media screen and (max-width: $viewport-max-width) {
    .grid-debug {
      margin-bottom: -1px;

      $col-base-shadows: (
        inset 1px 1px 0 rgba($grid-debug-color, 1.0),
        inset -1px 1px 0 rgba($grid-debug-color, 1.0)
      );

      .row {
        .col {
          @include box-shadow($col-base-shadows);
        }
      }
    }
  }
}

// Adds grid debugging for desktop only.
@mixin grid-debug-desktop($viewport-min-width)
{
  @media screen and (min-width: $viewport-min-width) {
    .grid-debug {
      .row {
        &:first-child:last-child {
          // Bottom border
          @include box-shadow((
            inset 1px 1px 0 rgba($grid-debug-color, 1.0),
            inset -1px -1px 0 rgba($grid-debug-color, 1.0)
          ));
        }
        &:last-child {
          // Bottom border
          @include box-shadow((
            inset -1px -1px 0 rgba($grid-debug-color, 1.0)
          ));
        }
        .col {
          // Nested rows inside a column don't need the extra line.
          .row:last-child {
            // Bottom border (no right border)
            @include box-shadow((
              inset 1px -1px 0 rgba($grid-debug-color, 1.0)
            ));
          }
        }
      }
    }
  }
}

// Adds the grid debugging styles for a specific responsive size of the grid.
// Since each stage of the grid can have its own column gutter, we need to
// re-do this each time the gutter changes.
@mixin grid-debug-stage($viewport-width, $viewport-limit, $col-gutter,
  $is-mobile) {
  @if $viewport-width {
    $query: 'min-width: ' + $viewport-width;
  }
  @else {
    $query: 'max-width: ' + $viewport-limit;
  }
  @media screen and (#{$query}) {
    .grid-debug {
      .row {
        // Top and left borders and the padding fills (base)
        $col-base-shadows: (
          inset (-$col-gutter / 2) 0 0 rgba($grid-debug-color, 0.45),
          inset ($col-gutter / 2) 0 0 rgba($grid-debug-color, 0.45),
          inset 1px 1px 0 rgba($grid-debug-color, 1.0)
        );
        $col-bottom-line: inset 1px -1px 0 rgba($grid-debug-color, 1.0);
        $col-shadows: $col-base-shadows;

        // Don't show the bottom line when on mobile (since this results
        // in double lines).
        @if $is-mobile == false {
          $col-shadows: append($col-base-shadows, $col-bottom-line);
        }
        margin-bottom: -1px;

        // Show a line only on the last column of the last row if on mobile.
        @if $is-mobile == true {
          &:last-child {
            .col:last-child {
              @include box-shadow(append($col-base-shadows, $col-bottom-line));
            }
          }
        }

        .col {
          // Base
          @include box-shadow($col-shadows);

          &:last-child {
            // Right border and base
            @include box-shadow((
              $col-shadows,
              inset -1px 1px 0 rgba($grid-debug-color, 1.0)
            ));
          }

          // Nested rows inside a column don't need the extra line.
          .row:last-child {
            .col:last-child {
              // Base
              @include box-shadow((
                $col-shadows
              ));
            }
          }
        }
      }
    }
  }
}
