// Dada Web Framework <https://github.com/msikma/dadafw>
// Copyright (C) 2013-2015, Michiel Sikma <michiel@sikma.org> and contributors
// MIT licensed

/**
 * Cross-Browser Support Functions
 *
 * These mixins replace regular CSS values in case they have
 * inadequate browser support and need vendor prefixes.
 *
 * Most of these mixins have a usage based on the W3 standard. In some
 * cases, they're slightly more specific, such as linear-gradient().
 */

// Disable click events (not standards compliant until probably CSS4)
@mixin pointer-events($var:none) {
  // Gecko, Webkit and IE11 and up.
  pointer-events: $var;
}

// Box model setting
// See <http://www.paulirish.com/2012/box-sizing-border-box-ftw/> for more info.
// It's recommended to use either content-box or border-box.
@mixin box-sizing($value:border-box) {
     -moz-box-sizing: $value; // Firefox current
  -webkit-box-sizing: $value; // iOS <= 4, Android <= 2.3
          box-sizing: $value;
}

// Text justification
@mixin text-justify($value) {
  -ms-text-justify: $value; // IE 8 Standards Mode
      text-justify: $value;
}

// A regular gradient from top to bottom
@mixin linear-gradient($from, $to, $deg:180deg) {
  // Safari <= 6.0
  background-image: -webkit-linear-gradient($deg, $from, $to);
  // IE 8 and 9
  -ms-filter: "progid:DXImageTransform.Microsoft.gradient(GradientType=0,StartColorStr='#{$from}', EndColorStr='#{$to}'";
  background-image: linear-gradient($deg, $from, $to);
}

// Generates keyframes labels and their CSS values
// todo: rework this to proper (@each $a, $b in $map) syntax.
@mixin keyframes-args($args) {
  @each $arg in map-keys($args) {
    $kvs: map-get($args, $arg);
    #{$arg} {
      @each $key in map-keys($kvs) {
        $val: map-get($kvs, $key);
        #{$key}: $val;
      }
    }
  }
}

// Cross-browser keyframes generator
// To use this, include the frame information in a map, for example:
//
//    @include keyframes(play, (
//      from: (background-position: 0px),
//      to: (background-position: -$img-loader-disp-size * $img-loader-frames),
//    ));
//
// The first argument is the name of the animation.
@mixin keyframes($name, $args) {
  @keyframes #{$name} {
    @include keyframes-args($args);
  }
  // Webkit current
  @-webkit-keyframes #{$name} {
    @include keyframes-args($args);
  }
  // Mozilla <= 3.6
  @-moz-keyframes #{$name} {
    @include keyframes-args($args);
  }
}

// Sets column-count
@mixin column-count($n) {
     -moz-column-count: $n;
  -webkit-column-count: $n;
          column-count: $n;
}

// Sets column-gap
@mixin column-gap($gap) {
     -moz-column-gap: $gap;
  -webkit-column-gap: $gap;
        column-count: $gap;
}
